@model JsonSchemaValidator.Models.SchemaValidator
<div>
    <form asp-action="Validator" asp-antiforgery="true" method="post">
        <div class="row d-flex justify-content-center">
            <div class="form-group">
                <textarea asp-for="Schema" class="form-control" rows="20" cols="50"
                    placeholder="Schema is required"></textarea><br/>
                @Html.ValidationMessage("Schema", new { @class="text-danger" })
            </div>

            <div>&nbsp;</div>

            <div class="form-group">
                <textarea asp-for="Data" class="form-control" rows="20" cols="50"
                    placeholder="Data is required"></textarea>
                    <br/>
                @Html.ValidationMessage("Data", new { @class="text-danger" })
            </div>
        </div>

        @if (!string.IsNullOrEmpty(Model.Errors))
        {
            <div class="form-group d-flex justify-content-center text-danger">
                @Html.Raw(Model.Errors)
            </div>
        }

        @if ((!string.IsNullOrEmpty(Model.Data) && !string.IsNullOrEmpty(Model.Schema)) &&
        string.IsNullOrEmpty(Model.Errors))
        {
            <div class="form-group d-flex justify-content-center text-success">
                Your payload is ok
            </div>
        }
        <div class="text-center">
            <input type="submit" value="Validate" class="btn btn-primary" />
        </div>
    </form>
</div>
